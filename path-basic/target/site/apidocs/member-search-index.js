memberSearchIndex = [{"p":"com.example.basic.appointments.domain.models","c":"AppointmentStatus","l":"ACTIVE"},{"p":"com.example.basic.persons.domain.models","c":"AppRoles","l":"ADMIN"},{"p":"com.example.basic.appointments.domain.models","c":"Appointment","l":"Appointment()","u":"%3Cinit%3E()"},{"p":"com.example.basic.appointments.application.utils.builders","c":"AppointmentBuilder","l":"AppointmentBuilder()","u":"%3Cinit%3E()"},{"p":"com.example.basic.appointments.infrastructure.adapters.input.controllers","c":"AppointmentController","l":"AppointmentController(AppointmentRequestUseCases, AppointmentUseCases)","u":"%3Cinit%3E(com.example.basic.appointments.application.ports.input.cases.AppointmentRequestUseCases,com.example.basic.appointments.application.ports.input.cases.AppointmentUseCases)"},{"p":"com.example.basic.appointments.application.utils","c":"AppointmentMapper","l":"AppointmentMapper(ModelMapper)","u":"%3Cinit%3E(org.modelmapper.ModelMapper)"},{"p":"com.example.basic.config","c":"MapperConfig","l":"appointmentModelMapper()"},{"p":"com.example.basic.appointments.domain.models","c":"AppointmentRequest","l":"AppointmentRequest()","u":"%3Cinit%3E()"},{"p":"com.example.basic.appointments.application.utils","c":"AppointmentRequestMapper","l":"AppointmentRequestMapper(ModelMapper)","u":"%3Cinit%3E(org.modelmapper.ModelMapper)"},{"p":"com.example.basic.appointments.domain.services","c":"AppointmentRequestValidationService","l":"AppointmentRequestValidationService()","u":"%3Cinit%3E()"},{"p":"com.example.basic.appointments.application.services","c":"AppointmentService","l":"AppointmentService(AppointmentRepositoryInterface, AppointmentMapper)","u":"%3Cinit%3E(com.example.basic.appointments.application.ports.output.repository.AppointmentRepositoryInterface,com.example.basic.appointments.application.utils.AppointmentMapper)"},{"p":"com.example.basic.appointments.infrastructure.adapters.output.repositories","c":"AppointmentsRepository","l":"AppointmentsRepository(AppointmentRepository, AppointmentValidationService)","u":"%3Cinit%3E(com.example.basic.appointments.infrastructure.repositories.AppointmentRepository,com.example.basic.appointments.domain.services.AppointmentValidationService)"},{"p":"com.example.basic.appointments.application.ports.output.models","c":"AppointmentsResponse","l":"AppointmentsResponse()","u":"%3Cinit%3E()"},{"p":"com.example.basic.appointments.domain.validations","c":"AppointmentValidations","l":"AppointmentValidations()","u":"%3Cinit%3E()"},{"p":"com.example.basic.appointments.domain.services","c":"AppointmentValidationService","l":"AppointmentValidationService()","u":"%3Cinit%3E()"},{"p":"com.example.basic","c":"BasicApplication","l":"BasicApplication()","u":"%3Cinit%3E()"},{"p":"com.example.basic.appointments.application.utils.builders","c":"AppointmentBuilder","l":"buildAppointmentFromRequest(AppointmentRequest)","u":"buildAppointmentFromRequest(com.example.basic.appointments.domain.models.AppointmentRequest)"},{"p":"com.example.basic.appointments.application.utils.builders","c":"RequestBuilder","l":"buildAppointmentRequest(RequestModel)","u":"buildAppointmentRequest(com.example.basic.appointments.application.ports.input.models.RequestModel)"},{"p":"com.example.basic.persons.application.utils.builders","c":"RequestBuilder","l":"buildDoctorRequest(DoctorRequest)","u":"buildDoctorRequest(com.example.basic.persons.application.ports.input.models.DoctorRequest)"},{"p":"com.example.basic.appointments.application.utils.builders","c":"ResponseBuilder","l":"buildListResponse(Flux<T>, Function<List<T>, List<AppointmentsResponse>>)","u":"buildListResponse(reactor.core.publisher.Flux,java.util.function.Function)"},{"p":"com.example.basic.persons.application.utils.builders","c":"ResponseBuilder","l":"buildListResponse(Flux<T>, Function<List<T>, List<PersonsResponse>>)","u":"buildListResponse(reactor.core.publisher.Flux,java.util.function.Function)"},{"p":"com.example.basic.persons.application.utils.builders","c":"RequestBuilder","l":"buildPatientRequest(PatientRequest)","u":"buildPatientRequest(com.example.basic.persons.application.ports.input.models.PatientRequest)"},{"p":"com.example.basic.appointments.application.utils.builders","c":"ResponseBuilder","l":"buildSavedAppointmentResponse(Mono<Appointment>)","u":"buildSavedAppointmentResponse(reactor.core.publisher.Mono)"},{"p":"com.example.basic.appointments.application.utils.builders","c":"ResponseBuilder","l":"buildSavedResponse(Mono<AppointmentRequest>, AppointmentRequestMapper)","u":"buildSavedResponse(reactor.core.publisher.Mono,com.example.basic.appointments.application.utils.AppointmentRequestMapper)"},{"p":"com.example.basic.persons.application.utils.builders","c":"ResponseBuilder","l":"buildSavedResponse(Mono<T>, Function<T, PersonsResponse>)","u":"buildSavedResponse(reactor.core.publisher.Mono,java.util.function.Function)"},{"p":"com.example.basic.appointments.application.utils.builders","c":"ResponseBuilder","l":"buildSingleResponse(Mono<T>, Function<T, AppointmentsResponse>)","u":"buildSingleResponse(reactor.core.publisher.Mono,java.util.function.Function)"},{"p":"com.example.basic.persons.application.utils.builders","c":"ResponseBuilder","l":"buildSingleResponse(Mono<T>, Function<T, PersonsResponse>)","u":"buildSingleResponse(reactor.core.publisher.Mono,java.util.function.Function)"},{"p":"com.example.basic.appointments.application.ports.input.cases","c":"AppointmentUseCases","l":"cancelAppointment(String)","u":"cancelAppointment(java.lang.String)"},{"p":"com.example.basic.appointments.application.services","c":"AppointmentService","l":"cancelAppointment(String)","u":"cancelAppointment(java.lang.String)"},{"p":"com.example.basic.appointments.infrastructure.adapters.input.controllers","c":"AppointmentController","l":"cancelAppointment(String)","u":"cancelAppointment(java.lang.String)"},{"p":"com.example.basic.appointments.domain.models","c":"AppointmentStatus","l":"CANCELED"},{"p":"com.example.basic.persons.domain.models","c":"Specializations","l":"CARDIOLOGY"},{"p":"com.example.basic.appointments.application.utils","c":"Constants","l":"Constants()","u":"%3Cinit%3E()"},{"p":"com.example.basic.persons.application.utils","c":"Constants","l":"Constants()","u":"%3Cinit%3E()"},{"p":"com.example.basic.appointments.application.ports.input.cases","c":"AppointmentUseCases","l":"createAppointment(Appointment)","u":"createAppointment(com.example.basic.appointments.domain.models.Appointment)"},{"p":"com.example.basic.appointments.application.services","c":"AppointmentService","l":"createAppointment(Appointment)","u":"createAppointment(com.example.basic.appointments.domain.models.Appointment)"},{"p":"com.example.basic.persons.application.ports.ouput.repository","c":"DoctorRepositoryInterface","l":"createDoctor(Doctor)","u":"createDoctor(com.example.basic.persons.domain.models.Doctor)"},{"p":"com.example.basic.persons.insfrastructure.adapters.output.repository","c":"DoctorsRepository","l":"createDoctor(Doctor)","u":"createDoctor(com.example.basic.persons.domain.models.Doctor)"},{"p":"com.example.basic.persons.insfrastructure.adapters.input.controllers","c":"DoctorController","l":"createDoctor(DoctorRequest)","u":"createDoctor(com.example.basic.persons.application.ports.input.models.DoctorRequest)"},{"p":"com.example.basic.persons.application.ports.input.cases","c":"DoctorUseCase","l":"createDoctor(DoctorRequest)","u":"createDoctor(com.example.basic.persons.application.ports.input.models.DoctorRequest)"},{"p":"com.example.basic.persons.application.services","c":"DoctorService","l":"createDoctor(DoctorRequest)","u":"createDoctor(com.example.basic.persons.application.ports.input.models.DoctorRequest)"},{"p":"com.example.basic.persons.application.ports.input.cases","c":"PatientUseCase","l":"createPatient(PatientRequest)","u":"createPatient(com.example.basic.persons.application.ports.input.models.PatientRequest)"},{"p":"com.example.basic.persons.application.ports.ouput.repository","c":"PatientRepositoryInterface","l":"createPatient(PatientRequest)","u":"createPatient(com.example.basic.persons.application.ports.input.models.PatientRequest)"},{"p":"com.example.basic.persons.application.services","c":"PatientService","l":"createPatient(PatientRequest)","u":"createPatient(com.example.basic.persons.application.ports.input.models.PatientRequest)"},{"p":"com.example.basic.persons.insfrastructure.adapters.input.controllers","c":"PatientController","l":"createPatient(PatientRequest)","u":"createPatient(com.example.basic.persons.application.ports.input.models.PatientRequest)"},{"p":"com.example.basic.persons.insfrastructure.adapters.output.repository","c":"PatientsRepository","l":"createPatient(PatientRequest)","u":"createPatient(com.example.basic.persons.application.ports.input.models.PatientRequest)"},{"p":"com.example.basic.appointments.application.ports.output.repository","c":"RequestRepositoryInterface","l":"createRequest(AppointmentRequest)","u":"createRequest(com.example.basic.appointments.domain.models.AppointmentRequest)"},{"p":"com.example.basic.appointments.infrastructure.adapters.output.repositories","c":"RequestsRepository","l":"createRequest(AppointmentRequest)","u":"createRequest(com.example.basic.appointments.domain.models.AppointmentRequest)"},{"p":"com.example.basic.appointments.application.ports.input.cases","c":"AppointmentRequestUseCases","l":"createRequest(RequestModel)","u":"createRequest(com.example.basic.appointments.application.ports.input.models.RequestModel)"},{"p":"com.example.basic.appointments.application.services","c":"RequestService","l":"createRequest(RequestModel)","u":"createRequest(com.example.basic.appointments.application.ports.input.models.RequestModel)"},{"p":"com.example.basic.exceptions","c":"CustomError","l":"CustomError()","u":"%3Cinit%3E()"},{"p":"com.example.basic.exceptions.throwables","c":"DateFormatExc","l":"DateFormatExc(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.example.basic.persons.application.utils.builders","c":"DateParser","l":"DateParser()","u":"%3Cinit%3E()"},{"p":"com.example.basic.appointments.application.utils.builders","c":"DateTimeParser","l":"DateTimeParser()","u":"%3Cinit%3E()"},{"p":"com.example.basic.appointments.domain.validations","c":"DateValidations","l":"DateValidations()","u":"%3Cinit%3E()"},{"p":"com.example.basic.persons.domain.validations","c":"DateValidations","l":"DateValidations()","u":"%3Cinit%3E()"},{"p":"com.example.basic.persons.application.ports.ouput.repository","c":"DoctorRepositoryInterface","l":"deleteDoctor(String)","u":"deleteDoctor(java.lang.String)"},{"p":"com.example.basic.persons.insfrastructure.adapters.output.repository","c":"DoctorsRepository","l":"deleteDoctor(String)","u":"deleteDoctor(java.lang.String)"},{"p":"com.example.basic.persons.domain.models","c":"AppRoles","l":"DOCTOR"},{"p":"com.example.basic.persons.domain.models","c":"Doctor","l":"Doctor()","u":"%3Cinit%3E()"},{"p":"com.example.basic.persons.insfrastructure.adapters.input.controllers","c":"DoctorController","l":"DoctorController(DoctorUseCase)","u":"%3Cinit%3E(com.example.basic.persons.application.ports.input.cases.DoctorUseCase)"},{"p":"com.example.basic.persons.application.ports.input.models","c":"DoctorRequest","l":"DoctorRequest()","u":"%3Cinit%3E()"},{"p":"com.example.basic.persons.application.services","c":"DoctorService","l":"DoctorService(DoctorRepositoryInterface, PersonMapper)","u":"%3Cinit%3E(com.example.basic.persons.application.ports.ouput.repository.DoctorRepositoryInterface,com.example.basic.persons.application.utils.PersonMapper)"},{"p":"com.example.basic.persons.insfrastructure.adapters.output.repository","c":"DoctorsRepository","l":"DoctorsRepository(DoctorRepository, DoctorValidationService)","u":"%3Cinit%3E(com.example.basic.persons.insfrastructure.repositories.DoctorRepository,com.example.basic.persons.domain.services.DoctorValidationService)"},{"p":"com.example.basic.persons.domain.services","c":"DoctorValidationService","l":"DoctorValidationService()","u":"%3Cinit%3E()"},{"p":"com.example.basic.exceptions","c":"CustomError.ErrorType","l":"DUPLICATE_ENTITY"},{"p":"com.example.basic.exceptions.throwables","c":"DuplicateExc","l":"DuplicateExc(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.example.basic.persons.domain.models","c":"Specializations","l":"EMERGENCY"},{"p":"com.example.basic.appointments.application.utils","c":"Constants","l":"ERROR"},{"p":"com.example.basic.persons.application.utils","c":"Constants","l":"ERROR"},{"p":"com.example.basic.exceptions","c":"ErrorHandler","l":"ErrorHandler()","u":"%3Cinit%3E()"},{"p":"com.example.basic.persons.insfrastructure.repositories","c":"DoctorRepository","l":"existsByPersonID(String)","u":"existsByPersonID(java.lang.String)"},{"p":"com.example.basic.persons.insfrastructure.repositories","c":"PatientRepository","l":"existsByPersonID(String)","u":"existsByPersonID(java.lang.String)"},{"p":"com.example.basic.appointments.infrastructure.repositories","c":"RequestRepository","l":"existsByRequestId(String)","u":"existsByRequestId(java.lang.String)"},{"p":"com.example.basic.persons.domain.validations","c":"FieldsValidations","l":"FieldsValidations()","u":"%3Cinit%3E()"},{"p":"com.example.basic.persons.application.ports.ouput.repository","c":"DoctorRepositoryInterface","l":"findAll()"},{"p":"com.example.basic.persons.insfrastructure.adapters.output.repository","c":"DoctorsRepository","l":"findAll()"},{"p":"com.example.basic.appointments.infrastructure.repositories","c":"AppointmentRepository","l":"findByAppointmentDateBetween(LocalDate, LocalDate)","u":"findByAppointmentDateBetween(java.time.LocalDate,java.time.LocalDate)"},{"p":"com.example.basic.persons.application.ports.ouput.repository","c":"PatientRepositoryInterface","l":"findByBirthDate(String, String)","u":"findByBirthDate(java.lang.String,java.lang.String)"},{"p":"com.example.basic.persons.insfrastructure.adapters.output.repository","c":"PatientsRepository","l":"findByBirthDate(String, String)","u":"findByBirthDate(java.lang.String,java.lang.String)"},{"p":"com.example.basic.persons.insfrastructure.repositories","c":"PatientRepository","l":"findByBirthDateBetween(LocalDate, LocalDate)","u":"findByBirthDateBetween(java.time.LocalDate,java.time.LocalDate)"},{"p":"com.example.basic.appointments.infrastructure.repositories","c":"AppointmentRepository","l":"findByDoctorId(String)","u":"findByDoctorId(java.lang.String)"},{"p":"com.example.basic.appointments.infrastructure.repositories","c":"RequestRepository","l":"findByDoctorIdRequestAndRequestDate(String, LocalDateTime)","u":"findByDoctorIdRequestAndRequestDate(java.lang.String,java.time.LocalDateTime)"},{"p":"com.example.basic.persons.application.ports.ouput.repository","c":"DoctorRepositoryInterface","l":"findByFullName(String, String)","u":"findByFullName(java.lang.String,java.lang.String)"},{"p":"com.example.basic.persons.application.ports.ouput.repository","c":"PatientRepositoryInterface","l":"findByFullName(String, String)","u":"findByFullName(java.lang.String,java.lang.String)"},{"p":"com.example.basic.persons.insfrastructure.adapters.output.repository","c":"DoctorsRepository","l":"findByFullName(String, String)","u":"findByFullName(java.lang.String,java.lang.String)"},{"p":"com.example.basic.persons.insfrastructure.adapters.output.repository","c":"PatientsRepository","l":"findByFullName(String, String)","u":"findByFullName(java.lang.String,java.lang.String)"},{"p":"com.example.basic.persons.application.ports.ouput.repository","c":"DoctorRepositoryInterface","l":"findById(String)","u":"findById(java.lang.String)"},{"p":"com.example.basic.persons.application.ports.ouput.repository","c":"PatientRepositoryInterface","l":"findById(String)","u":"findById(java.lang.String)"},{"p":"com.example.basic.persons.insfrastructure.adapters.output.repository","c":"DoctorsRepository","l":"findById(String)","u":"findById(java.lang.String)"},{"p":"com.example.basic.persons.insfrastructure.adapters.output.repository","c":"PatientsRepository","l":"findById(String)","u":"findById(java.lang.String)"},{"p":"com.example.basic.appointments.infrastructure.repositories","c":"AppointmentRepository","l":"findByPatientId(String)","u":"findByPatientId(java.lang.String)"},{"p":"com.example.basic.appointments.infrastructure.repositories","c":"AppointmentRepository","l":"findByPatientIdAndDoctorId(String, String)","u":"findByPatientIdAndDoctorId(java.lang.String,java.lang.String)"},{"p":"com.example.basic.persons.insfrastructure.repositories","c":"DoctorRepository","l":"findByPersonID(String)","u":"findByPersonID(java.lang.String)"},{"p":"com.example.basic.persons.insfrastructure.repositories","c":"PatientRepository","l":"findByPersonID(String)","u":"findByPersonID(java.lang.String)"},{"p":"com.example.basic.persons.insfrastructure.repositories","c":"DoctorRepository","l":"findByPersonNameIgnoreCaseAndPersonSurnameIgnoreCase(String, String)","u":"findByPersonNameIgnoreCaseAndPersonSurnameIgnoreCase(java.lang.String,java.lang.String)"},{"p":"com.example.basic.persons.insfrastructure.repositories","c":"PatientRepository","l":"findByPersonNameIgnoreCaseAndPersonSurnameIgnoreCase(String, String)","u":"findByPersonNameIgnoreCaseAndPersonSurnameIgnoreCase(java.lang.String,java.lang.String)"},{"p":"com.example.basic.persons.application.ports.ouput.repository","c":"DoctorRepositoryInterface","l":"findBySpeciality(String)","u":"findBySpeciality(java.lang.String)"},{"p":"com.example.basic.persons.insfrastructure.adapters.output.repository","c":"DoctorsRepository","l":"findBySpeciality(String)","u":"findBySpeciality(java.lang.String)"},{"p":"com.example.basic.persons.insfrastructure.repositories","c":"DoctorRepository","l":"findBySpecializationIgnoreCaseOrderByPersonNameAsc(String)","u":"findBySpecializationIgnoreCaseOrderByPersonNameAsc(java.lang.String)"},{"p":"com.example.basic.appointments.application.utils.builders","c":"IndexBuilder","l":"generateAppointmentId(String, String, String)","u":"generateAppointmentId(java.lang.String,java.lang.String,java.lang.String)"},{"p":"com.example.basic.appointments.application.utils.builders","c":"IndexBuilder","l":"generateRequestId(String, String, String)","u":"generateRequestId(java.lang.String,java.lang.String,java.lang.String)"},{"p":"com.example.basic.exceptions","c":"CustomError.ErrorType","l":"GENERIC_ERROR"},{"p":"com.example.basic.exceptions.throwables","c":"GenericExc","l":"GenericExc(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.example.basic.appointments.application.ports.output.models","c":"GenericResponse","l":"GenericResponse()","u":"%3Cinit%3E()"},{"p":"com.example.basic.persons.application.ports.ouput.models","c":"GenericResponse","l":"GenericResponse()","u":"%3Cinit%3E()"},{"p":"com.example.basic.appointments.application.ports.output.repository","c":"AppointmentRepositoryInterface","l":"getAppointmentById(String)","u":"getAppointmentById(java.lang.String)"},{"p":"com.example.basic.appointments.infrastructure.adapters.output.repositories","c":"AppointmentsRepository","l":"getAppointmentById(String)","u":"getAppointmentById(java.lang.String)"},{"p":"com.example.basic.appointments.infrastructure.adapters.input.controllers","c":"AppointmentController","l":"getAppointmentDetail(String)","u":"getAppointmentDetail(java.lang.String)"},{"p":"com.example.basic.appointments.application.ports.input.cases","c":"AppointmentUseCases","l":"getAppointmentDetails(String)","u":"getAppointmentDetails(java.lang.String)"},{"p":"com.example.basic.appointments.application.services","c":"AppointmentService","l":"getAppointmentDetails(String)","u":"getAppointmentDetails(java.lang.String)"},{"p":"com.example.basic.appointments.infrastructure.adapters.input.controllers","c":"AppointmentController","l":"getAppointmentsBetween(String, String)","u":"getAppointmentsBetween(java.lang.String,java.lang.String)"},{"p":"com.example.basic.appointments.application.ports.output.repository","c":"AppointmentRepositoryInterface","l":"getAppointmentsByDateRange(String, String)","u":"getAppointmentsByDateRange(java.lang.String,java.lang.String)"},{"p":"com.example.basic.appointments.infrastructure.adapters.output.repositories","c":"AppointmentsRepository","l":"getAppointmentsByDateRange(String, String)","u":"getAppointmentsByDateRange(java.lang.String,java.lang.String)"},{"p":"com.example.basic.appointments.application.ports.output.repository","c":"AppointmentRepositoryInterface","l":"getAppointmentsByDoctor(String)","u":"getAppointmentsByDoctor(java.lang.String)"},{"p":"com.example.basic.appointments.infrastructure.adapters.output.repositories","c":"AppointmentsRepository","l":"getAppointmentsByDoctor(String)","u":"getAppointmentsByDoctor(java.lang.String)"},{"p":"com.example.basic.appointments.application.ports.output.repository","c":"AppointmentRepositoryInterface","l":"getAppointmentsByPatient(String)","u":"getAppointmentsByPatient(java.lang.String)"},{"p":"com.example.basic.appointments.infrastructure.adapters.output.repositories","c":"AppointmentsRepository","l":"getAppointmentsByPatient(String)","u":"getAppointmentsByPatient(java.lang.String)"},{"p":"com.example.basic.appointments.application.ports.output.repository","c":"AppointmentRepositoryInterface","l":"getAppointmentsByPersons(String, String)","u":"getAppointmentsByPersons(java.lang.String,java.lang.String)"},{"p":"com.example.basic.appointments.infrastructure.adapters.output.repositories","c":"AppointmentsRepository","l":"getAppointmentsByPersons(String, String)","u":"getAppointmentsByPersons(java.lang.String,java.lang.String)"},{"p":"com.example.basic.appointments.infrastructure.adapters.input.controllers","c":"AppointmentController","l":"getAppointmentsDetailByDoctor(String)","u":"getAppointmentsDetailByDoctor(java.lang.String)"},{"p":"com.example.basic.appointments.infrastructure.adapters.input.controllers","c":"AppointmentController","l":"getAppointmentsDetailByPatient(String)","u":"getAppointmentsDetailByPatient(java.lang.String)"},{"p":"com.example.basic.appointments.application.ports.input.cases","c":"AppointmentUseCases","l":"getAppointmentsIn(String, String)","u":"getAppointmentsIn(java.lang.String,java.lang.String)"},{"p":"com.example.basic.appointments.application.services","c":"AppointmentService","l":"getAppointmentsIn(String, String)","u":"getAppointmentsIn(java.lang.String,java.lang.String)"},{"p":"com.example.basic.appointments.infrastructure.adapters.input.controllers","c":"AppointmentController","l":"getAppointmentsPersons(String, String)","u":"getAppointmentsPersons(java.lang.String,java.lang.String)"},{"p":"com.example.basic.persons.application.ports.input.cases","c":"DoctorUseCase","l":"getDoctor(String)","u":"getDoctor(java.lang.String)"},{"p":"com.example.basic.persons.application.services","c":"DoctorService","l":"getDoctor(String)","u":"getDoctor(java.lang.String)"},{"p":"com.example.basic.appointments.application.ports.input.cases","c":"AppointmentUseCases","l":"getDoctorAppointments(String)","u":"getDoctorAppointments(java.lang.String)"},{"p":"com.example.basic.appointments.application.services","c":"AppointmentService","l":"getDoctorAppointments(String)","u":"getDoctorAppointments(java.lang.String)"},{"p":"com.example.basic.persons.application.ports.input.cases","c":"DoctorUseCase","l":"getDoctorByFullName(String, String)","u":"getDoctorByFullName(java.lang.String,java.lang.String)"},{"p":"com.example.basic.persons.application.services","c":"DoctorService","l":"getDoctorByFullName(String, String)","u":"getDoctorByFullName(java.lang.String,java.lang.String)"},{"p":"com.example.basic.persons.application.ports.input.cases","c":"DoctorUseCase","l":"getDoctors()"},{"p":"com.example.basic.persons.application.services","c":"DoctorService","l":"getDoctors()"},{"p":"com.example.basic.persons.insfrastructure.adapters.input.controllers","c":"DoctorController","l":"getDoctors()"},{"p":"com.example.basic.persons.insfrastructure.adapters.input.controllers","c":"DoctorController","l":"getDoctorsByFullName(String, String)","u":"getDoctorsByFullName(java.lang.String,java.lang.String)"},{"p":"com.example.basic.persons.insfrastructure.adapters.input.controllers","c":"DoctorController","l":"getDoctorsById(String)","u":"getDoctorsById(java.lang.String)"},{"p":"com.example.basic.persons.application.ports.input.cases","c":"DoctorUseCase","l":"getDoctorsBySpeciality(String)","u":"getDoctorsBySpeciality(java.lang.String)"},{"p":"com.example.basic.persons.application.services","c":"DoctorService","l":"getDoctorsBySpeciality(String)","u":"getDoctorsBySpeciality(java.lang.String)"},{"p":"com.example.basic.persons.insfrastructure.adapters.input.controllers","c":"DoctorController","l":"getDoctorsBySpeciality(String)","u":"getDoctorsBySpeciality(java.lang.String)"},{"p":"com.example.basic.persons.application.ports.input.cases","c":"PatientUseCase","l":"getPatient(String)","u":"getPatient(java.lang.String)"},{"p":"com.example.basic.persons.application.services","c":"PatientService","l":"getPatient(String)","u":"getPatient(java.lang.String)"},{"p":"com.example.basic.appointments.application.ports.input.cases","c":"AppointmentUseCases","l":"getPatientAppointments(String)","u":"getPatientAppointments(java.lang.String)"},{"p":"com.example.basic.appointments.application.services","c":"AppointmentService","l":"getPatientAppointments(String)","u":"getPatientAppointments(java.lang.String)"},{"p":"com.example.basic.persons.insfrastructure.adapters.input.controllers","c":"PatientController","l":"getPatientById(String)","u":"getPatientById(java.lang.String)"},{"p":"com.example.basic.persons.insfrastructure.adapters.input.controllers","c":"PatientController","l":"getPatientsByBirthDate(String, String)","u":"getPatientsByBirthDate(java.lang.String,java.lang.String)"},{"p":"com.example.basic.persons.application.ports.input.cases","c":"PatientUseCase","l":"getPatientsByDate(String, String)","u":"getPatientsByDate(java.lang.String,java.lang.String)"},{"p":"com.example.basic.persons.application.services","c":"PatientService","l":"getPatientsByDate(String, String)","u":"getPatientsByDate(java.lang.String,java.lang.String)"},{"p":"com.example.basic.persons.insfrastructure.adapters.input.controllers","c":"PatientController","l":"getPatientsByFullName(String, String)","u":"getPatientsByFullName(java.lang.String,java.lang.String)"},{"p":"com.example.basic.persons.application.ports.input.cases","c":"PatientUseCase","l":"getPatientsByName(String, String)","u":"getPatientsByName(java.lang.String,java.lang.String)"},{"p":"com.example.basic.persons.application.services","c":"PatientService","l":"getPatientsByName(String, String)","u":"getPatientsByName(java.lang.String,java.lang.String)"},{"p":"com.example.basic.appointments.application.ports.input.cases","c":"AppointmentUseCases","l":"getSpecificAppointment(String, String)","u":"getSpecificAppointment(java.lang.String,java.lang.String)"},{"p":"com.example.basic.appointments.application.services","c":"AppointmentService","l":"getSpecificAppointment(String, String)","u":"getSpecificAppointment(java.lang.String,java.lang.String)"},{"p":"com.example.basic.exceptions","c":"ErrorHandler","l":"handleDuplicateRegister(DuplicateExc)","u":"handleDuplicateRegister(com.example.basic.exceptions.throwables.DuplicateExc)"},{"p":"com.example.basic.exceptions","c":"ErrorHandler","l":"handleGenericError(GenericExc)","u":"handleGenericError(com.example.basic.exceptions.throwables.GenericExc)"},{"p":"com.example.basic.exceptions","c":"ErrorHandler","l":"handleInvalidDate(DateFormatExc)","u":"handleInvalidDate(com.example.basic.exceptions.throwables.DateFormatExc)"},{"p":"com.example.basic.exceptions","c":"ErrorHandler","l":"handleInvalidSpeciality(SpecialityExc)","u":"handleInvalidSpeciality(com.example.basic.exceptions.throwables.SpecialityExc)"},{"p":"com.example.basic.exceptions","c":"ErrorHandler","l":"handleNotFoundEntity(NotFoundExc)","u":"handleNotFoundEntity(com.example.basic.exceptions.throwables.NotFoundExc)"},{"p":"com.example.basic.exceptions","c":"ErrorHandler","l":"handleTakenAppointment(TakenAppointmentExc)","u":"handleTakenAppointment(com.example.basic.exceptions.throwables.TakenAppointmentExc)"},{"p":"com.example.basic.appointments.application.utils.builders","c":"IndexBuilder","l":"IndexBuilder()","u":"%3Cinit%3E()"},{"p":"com.example.basic.exceptions","c":"CustomError.ErrorType","l":"INVALID_DATE"},{"p":"com.example.basic.exceptions","c":"CustomError.ErrorType","l":"INVALID_SPECIALITY"},{"p":"com.example.basic.persons.domain.models","c":"Person","l":"isActive"},{"p":"com.example.basic.appointments.domain.validations","c":"DateValidations","l":"isYearValid(int)"},{"p":"com.example.basic","c":"BasicApplication","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"com.example.basic.appointments.application.utils","c":"AppointmentRequestMapper","l":"mapAppointmentRequestToResponse(AppointmentRequest)","u":"mapAppointmentRequestToResponse(com.example.basic.appointments.domain.models.AppointmentRequest)"},{"p":"com.example.basic.appointments.application.utils","c":"AppointmentMapper","l":"mapAppointmentsToResponse(List<Appointment>)","u":"mapAppointmentsToResponse(java.util.List)"},{"p":"com.example.basic.appointments.application.utils","c":"AppointmentMapper","l":"mapAppointmentToResponse(Appointment)","u":"mapAppointmentToResponse(com.example.basic.appointments.domain.models.Appointment)"},{"p":"com.example.basic.persons.application.utils","c":"PersonMapper","l":"mapDoctorsToResponse(List<Doctor>)","u":"mapDoctorsToResponse(java.util.List)"},{"p":"com.example.basic.persons.application.utils","c":"PersonMapper","l":"mapDoctorToResponse(Doctor)","u":"mapDoctorToResponse(com.example.basic.persons.domain.models.Doctor)"},{"p":"com.example.basic.persons.application.utils","c":"PersonMapper","l":"mapPatientsToResponse(List<Patient>)","u":"mapPatientsToResponse(java.util.List)"},{"p":"com.example.basic.persons.application.utils","c":"PersonMapper","l":"mapPatientToResponse(Patient)","u":"mapPatientToResponse(com.example.basic.persons.domain.models.Patient)"},{"p":"com.example.basic.config","c":"MapperConfig","l":"MapperConfig()","u":"%3Cinit%3E()"},{"p":"com.example.basic.persons.domain.models","c":"Specializations","l":"NEUROLOGY"},{"p":"com.example.basic.exceptions","c":"CustomError.ErrorType","l":"NOT_FOUND"},{"p":"com.example.basic.exceptions.throwables","c":"NotFoundExc","l":"NotFoundExc(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.example.basic.persons.domain.models","c":"Specializations","l":"OBSTETRICS"},{"p":"com.example.basic.persons.application.utils.builders","c":"DateParser","l":"parseDate(String)","u":"parseDate(java.lang.String)"},{"p":"com.example.basic.appointments.application.utils.builders","c":"DateTimeParser","l":"parseDateTime(String)","u":"parseDateTime(java.lang.String)"},{"p":"com.example.basic.persons.domain.models","c":"AppRoles","l":"PATIENT"},{"p":"com.example.basic.persons.domain.models","c":"Patient","l":"Patient()","u":"%3Cinit%3E()"},{"p":"com.example.basic.persons.insfrastructure.adapters.input.controllers","c":"PatientController","l":"PatientController(PatientUseCase)","u":"%3Cinit%3E(com.example.basic.persons.application.ports.input.cases.PatientUseCase)"},{"p":"com.example.basic.persons.application.ports.input.models","c":"PatientRequest","l":"PatientRequest()","u":"%3Cinit%3E()"},{"p":"com.example.basic.persons.application.services","c":"PatientService","l":"PatientService(PatientRepositoryInterface, PersonMapper)","u":"%3Cinit%3E(com.example.basic.persons.application.ports.ouput.repository.PatientRepositoryInterface,com.example.basic.persons.application.utils.PersonMapper)"},{"p":"com.example.basic.persons.insfrastructure.adapters.output.repository","c":"PatientsRepository","l":"PatientsRepository(PatientRepository, PatientValidationService)","u":"%3Cinit%3E(com.example.basic.persons.insfrastructure.repositories.PatientRepository,com.example.basic.persons.domain.services.PatientValidationService)"},{"p":"com.example.basic.persons.domain.services","c":"PatientValidationService","l":"PatientValidationService()","u":"%3Cinit%3E()"},{"p":"com.example.basic.persons.domain.models","c":"Specializations","l":"PEDIATRICS"},{"p":"com.example.basic.persons.domain.models","c":"Person","l":"Person()","u":"%3Cinit%3E()"},{"p":"com.example.basic.persons.domain.models","c":"Person","l":"personAppID"},{"p":"com.example.basic.persons.domain.models","c":"Person","l":"personID"},{"p":"com.example.basic.persons.application.utils","c":"PersonMapper","l":"PersonMapper(ModelMapper)","u":"%3Cinit%3E(org.modelmapper.ModelMapper)"},{"p":"com.example.basic.config","c":"MapperConfig","l":"personModelMapper()"},{"p":"com.example.basic.persons.domain.models","c":"Person","l":"personName"},{"p":"com.example.basic.persons.domain.models","c":"Person","l":"personRole"},{"p":"com.example.basic.persons.application.ports.ouput.models","c":"PersonsResponse","l":"PersonsResponse()","u":"%3Cinit%3E()"},{"p":"com.example.basic.persons.domain.models","c":"Person","l":"personSurname"},{"p":"com.example.basic.persons.application.ports.input.cases","c":"DoctorUseCase","l":"removeDoctor(String)","u":"removeDoctor(java.lang.String)"},{"p":"com.example.basic.persons.application.services","c":"DoctorService","l":"removeDoctor(String)","u":"removeDoctor(java.lang.String)"},{"p":"com.example.basic.persons.insfrastructure.adapters.input.controllers","c":"DoctorController","l":"removeDoctor(String)","u":"removeDoctor(java.lang.String)"},{"p":"com.example.basic.appointments.infrastructure.adapters.input.controllers","c":"AppointmentController","l":"requestAppointment(RequestModel)","u":"requestAppointment(com.example.basic.appointments.application.ports.input.models.RequestModel)"},{"p":"com.example.basic.appointments.application.utils.builders","c":"RequestBuilder","l":"RequestBuilder()","u":"%3Cinit%3E()"},{"p":"com.example.basic.persons.application.utils.builders","c":"RequestBuilder","l":"RequestBuilder()","u":"%3Cinit%3E()"},{"p":"com.example.basic.appointments.application.ports.input.models","c":"RequestModel","l":"RequestModel()","u":"%3Cinit%3E()"},{"p":"com.example.basic.appointments.application.services","c":"RequestService","l":"RequestService(RequestRepositoryInterface, AppointmentRequestMapper, AppointmentUseCases)","u":"%3Cinit%3E(com.example.basic.appointments.application.ports.output.repository.RequestRepositoryInterface,com.example.basic.appointments.application.utils.AppointmentRequestMapper,com.example.basic.appointments.application.ports.input.cases.AppointmentUseCases)"},{"p":"com.example.basic.appointments.infrastructure.adapters.output.repositories","c":"RequestsRepository","l":"RequestsRepository(RequestRepository, DoctorRepository, PatientRepository, AppointmentRequestValidationService)","u":"%3Cinit%3E(com.example.basic.appointments.infrastructure.repositories.RequestRepository,com.example.basic.persons.insfrastructure.repositories.DoctorRepository,com.example.basic.persons.insfrastructure.repositories.PatientRepository,com.example.basic.appointments.domain.services.AppointmentRequestValidationService)"},{"p":"com.example.basic.appointments.application.utils.builders","c":"ResponseBuilder","l":"ResponseBuilder()","u":"%3Cinit%3E()"},{"p":"com.example.basic.persons.application.utils.builders","c":"ResponseBuilder","l":"ResponseBuilder()","u":"%3Cinit%3E()"},{"p":"com.example.basic.appointments.application.ports.output.repository","c":"AppointmentRepositoryInterface","l":"saveAppointment(Appointment)","u":"saveAppointment(com.example.basic.appointments.domain.models.Appointment)"},{"p":"com.example.basic.appointments.infrastructure.adapters.output.repositories","c":"AppointmentsRepository","l":"saveAppointment(Appointment)","u":"saveAppointment(com.example.basic.appointments.domain.models.Appointment)"},{"p":"com.example.basic.exceptions.throwables","c":"SpecialityExc","l":"SpecialityExc(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.example.basic.persons.domain.validations","c":"SpecialityValidations","l":"SpecialityValidations()","u":"%3Cinit%3E()"},{"p":"com.example.basic.exceptions","c":"CustomError.ErrorType","l":"TAKEN_APPOINTMENT"},{"p":"com.example.basic.exceptions.throwables","c":"TakenAppointmentExc","l":"TakenAppointmentExc(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.example.basic.appointments.application.ports.output.repository","c":"AppointmentRepositoryInterface","l":"updateAppointment(String)","u":"updateAppointment(java.lang.String)"},{"p":"com.example.basic.appointments.infrastructure.adapters.output.repositories","c":"AppointmentsRepository","l":"updateAppointment(String)","u":"updateAppointment(java.lang.String)"},{"p":"com.example.basic.appointments.application.utils","c":"Constants","l":"VALID"},{"p":"com.example.basic.persons.application.utils","c":"Constants","l":"VALID"},{"p":"com.example.basic.appointments.domain.services","c":"AppointmentRequestValidationService","l":"validate(AppointmentRequest, Mono<Doctor>, Mono<Patient>, Flux<AppointmentRequest>)","u":"validate(com.example.basic.appointments.domain.models.AppointmentRequest,reactor.core.publisher.Mono,reactor.core.publisher.Mono,reactor.core.publisher.Flux)"},{"p":"com.example.basic.persons.domain.services","c":"DoctorValidationService","l":"validate(Doctor)","u":"validate(com.example.basic.persons.domain.models.Doctor)"},{"p":"com.example.basic.persons.domain.services","c":"PatientValidationService","l":"validate(Patient)","u":"validate(com.example.basic.persons.domain.models.Patient)"},{"p":"com.example.basic.appointments.domain.services","c":"AppointmentValidationService","l":"validateAppointmentDate(Appointment)","u":"validateAppointmentDate(com.example.basic.appointments.domain.models.Appointment)"},{"p":"com.example.basic.persons.domain.validations","c":"DateValidations","l":"validateBirthDate(LocalDate)","u":"validateBirthDate(java.time.LocalDate)"},{"p":"com.example.basic.appointments.domain.services","c":"AppointmentValidationService","l":"validateDateRange(LocalDate, LocalDate)","u":"validateDateRange(java.time.LocalDate,java.time.LocalDate)"},{"p":"com.example.basic.persons.domain.services","c":"PatientValidationService","l":"validateDateRange(LocalDate, LocalDate)","u":"validateDateRange(java.time.LocalDate,java.time.LocalDate)"},{"p":"com.example.basic.appointments.domain.validations","c":"DateValidations","l":"validateDateRanges(LocalDate, LocalDate)","u":"validateDateRanges(java.time.LocalDate,java.time.LocalDate)"},{"p":"com.example.basic.persons.domain.validations","c":"DateValidations","l":"validateDateRanges(LocalDate, LocalDate)","u":"validateDateRanges(java.time.LocalDate,java.time.LocalDate)"},{"p":"com.example.basic.appointments.domain.validations","c":"DateValidations","l":"validateDates(LocalDateTime, LocalDateTime)","u":"validateDates(java.time.LocalDateTime,java.time.LocalDateTime)"},{"p":"com.example.basic.appointments.domain.validations","c":"DateValidations","l":"validateHour(LocalDateTime)","u":"validateHour(java.time.LocalDateTime)"},{"p":"com.example.basic.persons.domain.validations","c":"FieldsValidations","l":"validateInput(String)","u":"validateInput(java.lang.String)"},{"p":"com.example.basic.appointments.domain.validations","c":"AppointmentValidations","l":"validatePersons(String, String)","u":"validatePersons(java.lang.String,java.lang.String)"},{"p":"com.example.basic.appointments.domain.validations","c":"AppointmentValidations","l":"validateSpeciality(Doctor, String)","u":"validateSpeciality(com.example.basic.persons.domain.models.Doctor,java.lang.String)"},{"p":"com.example.basic.persons.domain.services","c":"DoctorValidationService","l":"validateSpeciality(String)","u":"validateSpeciality(java.lang.String)"},{"p":"com.example.basic.persons.domain.validations","c":"SpecialityValidations","l":"validSpeciality(String)","u":"validSpeciality(java.lang.String)"},{"p":"com.example.basic.appointments.domain.models","c":"AppointmentStatus","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"com.example.basic.exceptions","c":"CustomError.ErrorType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"com.example.basic.persons.domain.models","c":"AppRoles","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"com.example.basic.persons.domain.models","c":"Specializations","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"com.example.basic.appointments.domain.models","c":"AppointmentStatus","l":"values()"},{"p":"com.example.basic.exceptions","c":"CustomError.ErrorType","l":"values()"},{"p":"com.example.basic.persons.domain.models","c":"AppRoles","l":"values()"},{"p":"com.example.basic.persons.domain.models","c":"Specializations","l":"values()"}];updateSearchResults();